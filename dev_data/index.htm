<!DOCTYPE html>
<html>
 <head>
  <!--
Web Developer: Renats Kevrels (ex. Zozula)
Site: http://www.onclick.lv
Contact: info [at] onclick.lv
Skype: renat2985
Twitter: @Ramzies
Facebook: http://www.facebook.com/renat2985
GitHub: https://github.com/renat2985
From: Latvia, Valmiera
-->
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <link rel="shortcut icon" type="image/x-icon" href="favicon.ico">
  <script defer src="js/build.chart.js?v18.11.2018" charset="utf-8"></script>
  <!-- <link rel="stylesheet" type="text/css" href="css/chartist.min.css">
<script src="js/chartist.min.js" charset="utf-8"></script> -->
  <link rel="stylesheet" type="text/css" href="css/build.css?v18.11.2018">
  <!-- <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/style.css"> -->
  <script defer type="text/javascript" src="js/function.js?v18.11.2018"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Device Page</title>
  <script type="text/javascript">
   var jsonIndexResponse, jsonLang;
   window.onload = function() {
    if (window.location.hash.substring(1)) {
     deviceList('first', decodeURIComponent(window.location.hash.substring(1)));
    } else {
     deviceList('first');
    }
    // loadIssues('tretyakovsa/Sonoff_WiFi_switch',0);
   }

   function deviceList(stage,sorting) {
    html('content',' ');
    html('header-left',' ');
    html('header-right',' ');
    ajax.get('/ssdp.list.json?'+Math.random(),{},function(response) {
     var ipDevice=JSON.parse(response);
     for (var i in ipDevice) {
      if (ipDevice[i] == '0.0.0.0') {
       location.href = "/page.htm?first-connect";
      } else {
       loadModule(ipDevice[i],stage,sorting,ipDevice);
      }
      break;
     }
    },true);
   }

   function loadModule(ip,stage,sorting,ipDevice) {
    ajax.get('http://'+ip+'/modules.json',{},function(response) {
     var ipModule=JSON.parse(response);
     var allModules = [];
     var allSpace = [];
     // for(var key in ipModule) {
     if (stage == 'search') {
      loadBlock(ip,'content','first',ipModule.module);
     }
     // Сортировка
     if (stage == 'first' && sorting == null || searchModule(ipModule.module,sorting) || ipModule.space == sorting) {


      if (window.location.hostname == ip) {
       ajax.get('http://'+ip+'/lang/lang.'+ipModule.lang+'.json',{},function(response) {
        jsonLang=JSON.parse(response);
        loadBlock(ip,'content','first',ipModule.module);
        setContent('first','index.htm');

        for (var i in ipDevice) {
         if (window.location.hostname != ipDevice[i]) {
          loadModule(ipDevice[i],stage,sorting);
         }
        }

       },true);
      } else {
       loadBlock(ip,'content','first',ipModule.module);
      }

      ajax.get('http://'+ip+'/scenary.save.txt?'+Math.random(),{},function(response) {
       var options = '';
       var macros_ip=response.split("if voice = ");
       for (var i in macros_ip) {
        var command = macros_ip[i].substr(0,macros_ip[i].indexOf("\n"));
        if (command && command.indexOf(" = ") == -1 ) {
         options+='<input onclick="send_request(this, \'/voice?command='+command+'\')" class="btn btn-block btn-primary" value="'+command.replace(/_/g,' ')+'" type="button">';
        }
       }
       if (options){
        loadBlock(ip,'content','first','macros',options);
       }
      },true);

     }


     for (var s in ipModule.module) {
      // if (ipModule.module[s] != 'ntp' && ipModule.module[s] != 'ddns' && ipModule.module[s] != 'timers' && ipModule.module[s] != 'mqtt')
      allModules.push(ipModule.module[s]);
     }
     allSpace.push(ipModule.space);
     // }
     if (stage == 'first' || stage == 'search') {
      var spaceArray = [];
      var space_lookup  = {};
      for (var i in allSpace) {space_lookup[allSpace[i]] = allSpace[i];}
      for (i in space_lookup) {spaceArray.push(space_lookup[i]);}
      if (spaceArray.length == 1) {toggle('sorting-space','show');}
      html("sorting-space",'<h5 class="alert-default">{{LangSorting}}<\/h5><a href="#" class="btn btn-default" onclick="deviceList(\'first\');">all<\/a>');
      for(var key in spaceArray) {
       if (spaceArray[key]) document.getElementById("sorting-space").innerHTML += '<a href="#'+spaceArray[key]+'" class="btn btn-default" onclick="deviceList(\'first\',\''+spaceArray[key]+'\')">'+spaceArray[key]+'<\/a>';
      }
      //   var moduleArray = [];
      //   var lookup  = {};
      //   for (var i in allModules) {lookup[allModules[i]] = allModules[i];}
      //   for (i in lookup) {moduleArray.push(lookup[i]);}
      //   if (ipModule.length == 1) {toggle('sorting-module','show');}
      //   html('sorting-module','<h5 class="alert-default">{{LangSorting}}<\/h5><a href="#" class="btn btn-sm btn-default" onclick="deviceList(\'first\');">all<\/a>');
      //   for(var key in moduleArray) {
      //    if (moduleArray[key]) document.getElementById("sorting-module").innerHTML += '<a href="#'+moduleArray[key]+'" class="btn btn-sm btn-default" onclick="deviceList(\'first\',\''+moduleArray[key]+'\')">'+moduleArray[key]+'<\/a>';
      //   }
     }
    },true);
   }

   function loadBlock(ip, content, stage, modules, macrosList) {
    ajax.get('http://'+ip+'/config.live.json?'+Math.random(),{},function(response) {
     var jsonIndexResponse0 = JSON.parse(response);
     ajax.get('http://'+ip+'/config.options.json?'+Math.random(),{},function(response) {
      var jsonIndexResponse1 = JSON.parse(response);
      jsonIndexResponse = mergeObject(jsonIndexResponse0, jsonIndexResponse1, jsonLang);
      //jsonIndexResponse = Object.assign(jsonIndexResponse0, jsonIndexResponse1, jsonLang);
      if(searchModule(modules,"relay")) {
       for (var i = 0; i < 6; i++) {
        if (!searchModule(modules,"relay"+i)){
         jsonIndexResponse["hiddenRelay"+i] = 'hidden';
        }
       }
       loadBlock2('relay','timer.save',ip, content, stage, jsonIndexResponse);
      }
      if (searchModuleOld(modules,"rgb")){
       loadBlock2('rgb','timer.save',ip, content, stage, jsonIndexResponse);
      }
      if (searchModule(modules,"rgbs")){
       loadBlock2('rgbs','timer.save',ip, content, stage, jsonIndexResponse);
      }
      if (modules == 'macros'){
       jsonIndexResponse.macrosList = macrosList;
       loadBlock2('macros','timer.save',ip, content, stage, jsonIndexResponse);
      }
      if (searchModule(modules,"rfLivolo")){
       loadBlock2('livolo','timer.save',ip, content, stage, jsonIndexResponse);
      }
      if (searchModule(modules,"jalousie")){
       loadBlock2('jalousie','timer.save',ip, content, stage, jsonIndexResponse);
      }
      if (searchModule(modules,"leakag")){
       loadBlock2('leakag','timer.save',ip, content, stage, jsonIndexResponse);
      }
      //if (searchModule(modules,"temperature")){
      // loadBlock2('temperature','charts.json?data=temperature&data1=highAlarmTemp&data2=lowAlarmTemp&',ip, content, stage, jsonIndexResponse);
      //}
      // if(/temperature/.test(modules)) {
      for (var i = 0; i < 10; i++) {
       if (searchModuleOld(modules,'temperature'+(i==0?'':i))){
        loadBlock2('temperature','charts.json?data=temperature'+(i==0?'':i)+'&data1=highAlarmTemp'+(i==0?'':i)+'&data2=lowAlarmTemp'+(i==0?'':i)+'&',ip, content, stage, jsonIndexResponse,(i==0?'':i));
       }
      }
      //  }
      //if (searchModule(modules,"temperature")){
      // loadBlock2('temperature','temperature',ip, content, stage, jsonIndexResponse);
      //}
      if (searchModule(modules,"humidity")){
       loadBlock2('humidity','charts.json?data=humidity&data1=highAlarmHum&data2=lowAlarmHum&',ip, content, stage, jsonIndexResponse);
      }
      if (searchModule(modules,"pow")){
       loadBlock2('pow','charts.json?data=pow&data1=highAlarmPow&data2=lowAlarmPow&',ip, content, stage, jsonIndexResponse);
      }
      if (searchModule(modules,"A0")){
       loadBlock2('A0','charts.json?data=A0&data1=highAlarmA0&data2=lowAlarmA0&',ip, content, stage, jsonIndexResponse);
      }
      if (!stage && content == "relay" || content == "rgb" || content == "jalousie" || content == "leakag"){
       loadBlock2(content,'timer.save',ip, content, stage, jsonIndexResponse);
      }
      if (window.location.hostname == ip && stage == 'first') {
       var new_string2;
       var bodyData = document.getElementsByTagName('body')[0].innerHTML;
       for (var key in jsonIndexResponse) {
        new_string2 = bodyData.replace(new RegExp('{{'+key+'}}', 'g'), jsonIndexResponse[key]);
        bodyData = new_string2;
       }
       document.getElementsByTagName('body')[0].innerHTML = new_string2;
       if (searchModule(modules,"upgrade")){
        loadUpdate('tretyakovsa/Sonoff_WiFi_switch', jsonIndexResponse.spiffsData, jsonIndexResponse.LangUpgrade, 10000);
       }
       //setContent('first',jsonIndexResponse);
      }
     },true);
    },true);
   }

   function loadBlock2(page, jsonPage, ip, content, stage, jsonIndexResponse, idModule){
    if (stage == 'first'){
     document.getElementById(content).innerHTML+='<div id="block-'+ip+'-'+page+(idModule?idModule:'')+'"><div class="col-md-6"><div class="block"><div class="loader"><\/div> <center><a href="http://'+ip+'">http://'+ip+'<\/a><\/center><\/div><\/div><\/div>';
    }
    ajax.get('http://'+ip+'/block-'+page+'.htm',{},function(response) {
     var data = response;
     ajax.get('http://'+ip+'/'+jsonPage+'.json'+(idModule?'?n='+idModule:''),{},function(response) {
      var timers=JSON.parse(response);
      var timerList = '';
      if (timers.timer) {
       timers.timer.sort(function(a,b){return (a.time1 > b.time1) ? 1 : ((b.time1 > a.time1) ? -1 : 0);});
       for (var i = 0; i < timers.timer.length; i++) {
        var day_view = timers.timer[i].day.split("");
        var day_view_add = '';
        for (var y in day_view) {
         if (y == 0 && day_view[y] == 1){  day_view_add+=' <span class="label label-danger">'+jsonIndexResponse.LangSun+'</span> '; }
         if (y == 1 && day_view[y] == 1){  day_view_add+=' <span class="label label-info">'+jsonIndexResponse.LangMon+'</span> '; }
         if (y == 2 && day_view[y] == 1){  day_view_add+=' <span class="label label-info">'+jsonIndexResponse.LangTue+'</span> '; }
         if (y == 3 && day_view[y] == 1){  day_view_add+=' <span class="label label-info">'+jsonIndexResponse.LangWed+'</span> '; }
         if (y == 4 && day_view[y] == 1){  day_view_add+=' <span class="label label-info">'+jsonIndexResponse.LangThu+'</span> '; }
         if (y == 5 && day_view[y] == 1){  day_view_add+=' <span class="label label-info">'+jsonIndexResponse.LangFri+'</span> '; }
         if (y == 6 && day_view[y] == 1){  day_view_add+=' <span class="label label-danger">'+jsonIndexResponse.LangSat+'</span> '; }
        }
        timerList += '<li><span class="label label-warning">'+(timers.timer[i].active==1 || typeof timers.timer[i].active=='undefined'?'on':'off')+'</span> <span class="label label-default"><i class="clock-new-img"></i> '+timers.timer[i].time1+'</span> '+timers.timer[i].com1+'<br>'+day_view_add+'</li>';
       }
       jsonIndexResponse.timerList = (timerList?timerList:'<li>'+jsonIndexResponse.LangNoTimers+'<\/li>');
      }

      jsonIndexResponse = mergeObject(jsonIndexResponse, timers);
      //jsonIndexResponse = Object.assign(jsonIndexResponse, timers);
      var theCookies = document.cookie.split(';');
      for (var i = 1 ; i <= theCookies.length; i++) {
       jsonIndexResponse[theCookies[i-1].split("=")[0].replace(/^ /,'')] = theCookies[i-1].split("=")[1];
      }
      jsonIndexResponse.ip = ip;
      //jsonIndexResponse.relay = (jsonIndexResponse.relay?jsonIndexResponse.LangOff:jsonIndexResponse.LangOn);
      for (var i = 0; i < 6; i++) {
       jsonIndexResponse["relay"+i] = (jsonIndexResponse["relay"+i]?jsonIndexResponse.LangOff:jsonIndexResponse.LangOn);
      }
      jsonIndexResponse.rgb = (jsonIndexResponse.rgb?jsonIndexResponse.LangOff:jsonIndexResponse.LangOn);
      jsonIndexResponse.rgbs = (jsonIndexResponse.rgbs?jsonIndexResponse.LangOff:jsonIndexResponse.LangOn);
      jsonIndexResponse.jalousie = (jsonIndexResponse.jalousie?jsonIndexResponse.LangClose:jsonIndexResponse.LangOpen);
      jsonIndexResponse.stateLeakag = (jsonIndexResponse.stateLeakag?jsonIndexResponse.LangOff:jsonIndexResponse.LangOn);
      if (page == 'A0') {
       jsonIndexResponse.analogId = 'A0json'+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonIndexResponse.analogId+"','http://"+ip+"/charts.json?data=A0&data1=highAlarmA0&data2=lowAlarmA0')", 1500);
      }
      if (page == 'pow') {
       jsonIndexResponse.powId = 'powjson'+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonIndexResponse.powId+"','http://"+ip+"/charts.json?data=pow&data1=highAlarmPow&data2=lowAlarmPow')", 1500);
      }
      if (page == 'temperature') {
       jsonIndexResponse.sensorId = 'temperaturejson'+idModule+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonIndexResponse.sensorId+"','http://"+ip+"/charts.json?data=temperature"+(idModule?idModule:'')+"&data1=highAlarmTemp"+(idModule?idModule:'')+"&data2=lowAlarmTemp"+(idModule?idModule:'')+"')", 1500);
      }
      if (page == 'humidity') {
       jsonIndexResponse.sensorId = 'humidityjson'+ip.replace(/[^a-z0-9]/gi,'');
       setTimeout("loadChart('"+jsonIndexResponse.sensorId+"','http://"+ip+"/charts.json?data=humidity&data1=highAlаrmHum&data2=lowAlаrmHum')", 1500);
      }
      var new_string;
      for (var key in jsonIndexResponse) {
       new_string = data.replace(new RegExp('{{'+key+'}}', 'g'), jsonIndexResponse[key]);
       data = new_string;
      }
      document.getElementById("block-"+ip+"-"+page+(idModule?idModule:'')).innerHTML=new_string;
     },true);
    },true);
   }

   function ajaxm(ipHost, pagename, submit, loadB) {
    var old_submit = submit.value;
    var d = new Date(); // for now
    var datetext = d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();
    var parent = submit.parentNode.childNodes[1].innerHTML;
    document.getElementById('history').insertAdjacentHTML('afterbegin', '<li><span class="label label-default"><i class="clock-new-img"><\/i> '+datetext+'<\/span><span class="history" style="cursor:pointer" onclick="toggle(\'hide-'+datetext+'\');return false"><b>'+parent+'<\/b><br><em>'+old_submit+'<\/em><small class="hidden" id="hide-'+datetext+'"><hr><span class="label label-warning">GET<\/span> <a href="http://'+ipHost+'/'+pagename+'">http://'+ipHost+'/'+pagename+'<\/a><\/small><\/span><\/li>');
    submit.value = 'Loading...';
    ajax.get('http://'+ipHost+'/'+pagename,{},function(response) {
     submit.value=old_submit;
     if (pagename.slice(0, 9) == 'lang?set=') {
      window.location = '/';
     } else {
      var response=JSON.parse(response);
      if (response.title && response.title!='undefined') {
       if (submit.tagName == 'INPUT') {submit.value = jsonLang[response.title.slice(2, -2)];}
      }
     }
    },true);
   }
  </script>
 </head>
 <body>
  <div id="news"></div>
  <ul id="url-content" class="hidden" onclick="document.getElementById('container').style.zIndex=0;"></ul>
  <div class="container device index" id="container" onclick="this.style.position='relative';this.style.zIndex=10">
   <div id="header">
    <div class="btn-group pull-right" id="header-right" style="margin-top:35px;"></div>
    <div id="header-left"></div>
   </div>
   <div class="col-sm-12 col-md-3">
    <h5 style="background-color:#C0C7CA;cursor:pointer" class="hidden-xs" onclick="toggle('history');return false">{{LangHistory}}</h5>
    <ul id="history" class="hidden-xs hidden"></ul>
    <hr>
    <div id="left-content"></div>
    <!--div class="block" id="sorting-space"></div>
<div class="block" id="sorting-module"></div-->
    <div class="row"></div>
   </div>
   <div class="col-sm-12 col-md-9" id="top-content"></div>
   <div class="col-sm-12 col-md-9" id="content"></div>
  </div>
  <div id="edit-content" class="hidden" onclick="document.getElementById('container').style.zIndex=0;">
   <textarea class="form-control" onkeyup="isValidJson(this.value,'edit-json')" spellcheck="false" id="edit-json"></textarea>
   <div id="error-json"></div>
   <div class="btn-group btn-block">
    <input class="btn btn-danger" style="width:80%" id="edit-save" onclick="httpDelete('/index.htm.json.gz');send_request_edit(this, val('edit-json'),'index.htm.json');toggle('edit-content');toggle('url-content');" value="Save" type="button">
    <a class="btn btn-info" style="width:20%" href="#" id="download-json" download=""><i class="download-img"></i></a>
   </div>
  </div>
 </body>
</html>
